@import url('open-props/sizes');
@import url('open-props/fonts');
@import url('open-props/borders');
@import url('open-props/shadows');
@import url('open-props/zindex');
@import url('open-props/animations');
@import url('open-props/easings');
@import url('open-props/normalize');
@import url('open-props/colors');
@import url('open-props/aspects');

/* @import url('reset.css'); */
@import url('colors.css');
@import url('mathquill.css');
@import url('mathquill-changes.css');

@layer base.theme {
	:where([data-theme='light'], .light, .light-theme) {
		--link: var(--indigo-7);
		--link-visited: var(--purple-7);
		--text-1: var(--gray-12);
		--text-2: var(--gray-7);
		--surface-1: var(--gray-0);
		--surface-2: var(--gray-2);
		--surface-3: var(--gray-3);
		--surface-4: var(--gray-4);
		--scrollthumb-color: var(--gray-7);
		--shadow-color: 220 3% 15%;
		--shadow-strength: 1%;

		color-scheme: light;
	}

	@media (dynamic-range: high) {
		@supports (color: color(display-p3 0 0 0)) {
			:where([data-theme='light'], .light, .light-theme) {
				--link: color(display-p3 0.1 0.4 1);
				--link-visited: color(display-p3 0.6 0.2 1);
			}
		}
	}

	:where([data-theme='light'], .light, .light-theme) :where(dialog) {
		background-color: var(--surface-1);
	}

	:where([data-theme='light'], .light, .light-theme) :where(button, .btn) {
		--_highlight: var(--_highlight-light);
		--_bg: var(--_bg-light);
		--_ink-shadow: var(--_ink-shadow-light);
	}

	:where([data-theme='light'], .light, .light-theme) :where(button, .btn):where([type='reset']) {
		--_text: var(--red-6);
		--_border: var(--red-3);
	}

	:where([data-theme='light'], .light, .light-theme)
		:where(button, .btn, input:is([type='button'], [type='submit'], [type='reset']))[disabled] {
		--_text: var(--gray-6);
	}

	:where([data-theme='light'], .light, .light-theme)
		:where(textarea, select, input:not([type='button'], [type='submit'], [type='reset'])) {
		background-color: var(--surface-2);
	}
}

@layer base.theme {
	:where([data-theme='dark'], .dark, .dark-theme) {
		--link: var(--indigo-3);
		--link-visited: var(--purple-3);
		--text-1: var(--gray-0);
		--text-2: var(--gray-4);
		--surface-1: var(--gray-9);
		--surface-2: var(--gray-8);
		--surface-3: var(--gray-7);
		--surface-4: var(--gray-6);
		--scrollthumb-color: var(--gray-6);
		--shadow-strength: 10%;
		--shadow-color: 220 40% 2%;

		color-scheme: dark;
	}

	:where([data-theme='dark'], .dark, .dark-theme) :where(dialog) {
		background-color: var(--surface-2);
	}

	:where([data-theme='dark'], .dark, .dark-theme) :where(button, .btn) {
		--_highlight: var(--_highlight-dark);
		--_bg: var(--_bg-dark);
		--_ink-shadow: var(--_ink-shadow-dark);
	}

	:where([data-theme='dark'], .dark, .dark-theme) :where(button, .btn):where([type='reset']) {
		--_text: var(--red-2);
		--_border: var(--surface-3);
	}

	:where([data-theme='dark'], .dark, .dark-theme)
		:where(button, .btn, input:is([type='button'], [type='submit'], [type='reset']))[disabled] {
		--_text: var(--gray-5);
	}

	:where([data-theme='dark'], .dark, .dark-theme)
		:where(textarea, select, input:not([type='button'], [type='submit'], [type='reset'])) {
		background-color: #171a1c;
	}

	:where([data-theme='dark'], .dark, .dark-theme) :where([disabled]),
	:where([data-theme='dark'], .dark, .dark-theme) :where([type='reset']),
	:where([data-theme='dark'], .dark, .dark-theme) :where([type='submit']),
	:where([data-theme='dark'], .dark, .dark-theme) :where(form button:not([type='button'])) {
		--_bg: var(--surface-1);
	}
}

:not(:defined) {
	visibility: hidden;
}

:where(input, button, textarea, select),
:where(input[type='file'])::-webkit-file-upload-button {
	color: inherit;
	font: inherit;
	letter-spacing: inherit;
}

:where(input, textarea) {
	padding-block: var(--size-1);
	padding-inline: var(--size-2);
}

:root {
	--hi-contrast: var(--slate12);
	--lo-contrast: white;
	--canvas: hsl(0deg 0% 93%);
	--panel: white;
	--transparent-panel: hsl(0deg 0% 0% / 97%);
	--shadow-light: hsl(206deg 22% 7% / 35%);
	--shadow-dark: hsl(206deg 22% 7% / 20%);
	--nav-h: var(--size-8);
	--top-offset: 6rem;
	--sidebar-w: 30rem;
	--sidebar-mid-w: 36rem;
	--sidebar-large-w: 48rem;
	--main-width: 80rem;
	--side-nav: 2.4rem;
	--side-page: var(--side-nav);

	/* easings */
	--out-back: cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

@media (prefers-color-scheme: dark) {
	:root {
		--hi-contrast: var(--slate12);
		--lo-contrast: var(--slate1);
		--canvas: hsl(0deg 0% 15%);
		--panel: var(--slate3);
		--transparent-panel: hsl(0deg 100% 100% / 97%);
		--shadow-light: hsl(206deg 22% 7% / 35%);
		--shadow-dark: hsl(206deg 22% 7% / 20%);
	}
}

@media screen and (width >= 480px) {
	:root {
		--side-nav: 3.2rem;
	}
}

@media screen and (width >= 768px) {
	:root {
		--side-page: 14vw;
		--top-offset: 10rem;
		--side-nav: 4.8rem;
	}
}

/*	theme vars */
.theme-default {
	--back: #fff;
	--back-light: #f6fafd;
	--back-api: #e5eef5;
	--prime: #ff3e00;
	--second: #676778;
	--flash: #40b3ff;
	--highlight: #ffff82;
	--heading: #222;
	--text: #444;
	--second-text: #7b7766;
	--sidebar-text: rgb(255 255 255 / 90%);
	--border-w: 0.3rem; /* border-width  */
	--border-r: 0.4rem; /* border-radius */
}

/*	typo vars */
.typo-default {
	--code-fs: 1.3rem;
	--h6: 1.4rem;
	--h5: 1.6rem;
	--h4: 1.8rem; /* default font-size */
	--h3: 2.6rem;
	--h2: 3rem;
	--h1: 3.2rem;
	--linemax: ; /* max line-length */
	--lh: 1.5; /* base line-height */
}

body {
	margin: 0;
	background-color: var(--lo-contrast);
	color: var(--hi-contrast);
	font-family: var(--font-sans);
	font-size: var(--font-size-2);
}

@media (prefers-color-scheme: dark) {
	body {
		background-color: var(--mauve1);
	}
}

svg {
	display: block;
	overflow: visible;
}

pre,
code {
	margin: 0;
}

::selection {
	background-color: var(--violet5);
	color: var(--violet12);
}

h1,
h2,
h3,
h4,
h5,
h6 {
	font-weight: 500;
}

@media (prefers-color-scheme: dark) {
	:where(
			textarea,
			select,
			input:not(
					button,
					button[type],
					input[type='button'],
					input[type='submit'],
					input[type='reset']
				)
		) {
		background-color: #171a1c;
	}
}

a {
	flex-shrink: 0;
	align-items: center;
	color: var(--hi-contrast);
	gap: var(--size-1);
	line-height: inherit;
	outline: none;
	-webkit-tap-highlight-color: rgb(0 0 0 / 0%);
	text-decoration-color: var(--slate4);
	text-decoration-line: none;
	text-underline-offset: 3px;
}

a:hover {
	text-decoration-color: var(--slate7);
	text-decoration-line: underline;
}

a:focus {
	outline: var(--slate8) solid 2px;
	outline-offset: 2px;
	text-decoration-line: none;
}

@layer components {
	.filled-icon {
		fill: var(--text-2);
	}

	.icon-button {
		--size: 40px;
		--_shadow-size: 0;
		--_shadow-color: var(--link);

		background: none;
		aspect-ratio: var(--ratio-square);
		border: none;
		border-radius: var(--radius-round);
		box-shadow: 0 0 var(--_shadow-size) var(--_shadow-color);
		padding: calc(var(--size-2) + 2px);
		cursor: pointer;
		touch-action: manipulation;
		transition:
			outline-offset 145ms var(--ease-2),
			box-shadow 0.5s var(--ease-out-4);
		inline-size: var(--size);
		block-size: var(--size);
	}

	.icon-button > svg {
		stroke-linecap: round;
		inline-size: 100%;
		block-size: 100%;
	}

	.icon-button:active {
		--_shadow-size: 0.4em;
	}

	.icon-button:nth-of-type(2n) {
		--_shadow-color: var(--pink-5);
	}

	.icon-button:nth-of-type(3n) {
		--_shadow-color: var(--lime-5);
	}

	.icon-button:nth-of-type(4n) {
		--_shadow-color: var(--cyan-5);
	}

	.icon-button:hover:not(:active) {
		--_shadow-size: 1em;
	}
}

/* otherwise there will be stupid boxes */
:where(kbd, var) {
	border: none;
}
